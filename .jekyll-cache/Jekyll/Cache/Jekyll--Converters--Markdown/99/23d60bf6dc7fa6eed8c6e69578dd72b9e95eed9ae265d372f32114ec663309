I" <p>구조체를 설명했는데 이와 비슷한 공용체제 대해 설명하지 않았습니다. 간단하게 공용체의 의미를 설명드리고 구조체와의 차이점 하나에 대해 설명드리겠습니다.</p>

<p>먼저 공용체란 구조체와 선언하는 방법이 동일한 새로운 사용자 정의 자료형입니다. 구조체는 strcut 선언을통해서 정의하고 공용체는 union 선언을 통해서 정의합니다.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;stdio.h&gt;
</span>
<span class="k">typedef</span> <span class="k">union</span>
<span class="p">{</span>
	<span class="kt">char</span> <span class="n">mem1</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">mem2</span><span class="p">;</span>
	<span class="kt">double</span> <span class="n">mem3</span><span class="p">;</span>
<span class="p">}</span><span class="n">Uni</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">Uni</span> <span class="n">un</span><span class="p">;</span>
	<span class="n">printf</span><span class="p">(</span><span class="err">“</span><span class="o">%</span><span class="err">#</span><span class="n">x</span> <span class="o">%</span><span class="err">#</span><span class="n">x</span> <span class="o">%</span><span class="err">#</span><span class="n">x</span><span class="err">\</span><span class="n">n</span><span class="err">”</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">un</span><span class="p">.</span><span class="n">mem1</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">un</span><span class="p">.</span><span class="n">mem2</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">un</span><span class="p">.</span><span class="n">mem3</span><span class="p">);</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>실행결과</p>

<p>0x4ffdec 0x4ffdec 0x4ffdec</p>

<p>계속하려면 아무 키나 누르십시오 . . .</p>

<p>위의 결과가 무엇을 의미할까요? 공용체의 모든 멤버들의 주소값이 똑같습니다.</p>

<p>구조체는 각 멤버마다 메모리공간에 할당이 되지만 공용체는 각 큰 사이즈의 멤버에 맞춰 메모리공간을 할당하고 모든 멤버가 이 메모리공간을 공유합니다.</p>

<p><img src="/images/2018/09/union.jpg" alt="union" width="70%" height="70%" /></p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;stdio.h&gt;
</span>
<span class="k">typedef</span> <span class="k">struct</span>
<span class="p">{</span>
	<span class="kt">char</span> <span class="n">mem1</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">mem2</span><span class="p">;</span>
	<span class="kt">double</span> <span class="n">mem3</span><span class="p">;</span>
<span class="p">}</span><span class="n">St</span><span class="p">;</span>

<span class="k">typedef</span> <span class="k">union</span>
<span class="p">{</span>
	<span class="kt">char</span> <span class="n">mem1</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">mem2</span><span class="p">;</span>
	<span class="kt">double</span> <span class="n">mem3</span><span class="p">;</span>
<span class="p">}</span><span class="n">Uni</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">St</span> <span class="n">st</span><span class="p">;</span>
	<span class="n">Uni</span> <span class="n">un</span><span class="p">;</span>
	
	<span class="n">st</span><span class="p">.</span><span class="n">mem1</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
	<span class="n">st</span><span class="p">.</span><span class="n">mem2</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>
	<span class="n">st</span><span class="p">.</span><span class="n">mem3</span> <span class="o">=</span> <span class="mi">14</span><span class="p">.</span><span class="mi">123</span><span class="p">;</span>

	<span class="n">printf</span><span class="p">(</span><span class="err">“</span><span class="o">%</span><span class="n">d</span><span class="err">\</span><span class="n">n</span><span class="err">”</span><span class="p">,</span> <span class="n">st</span><span class="p">.</span><span class="n">mem1</span><span class="p">);</span>
	<span class="n">printf</span><span class="p">(</span><span class="err">“</span><span class="o">%</span><span class="n">d</span><span class="err">\</span><span class="n">n</span><span class="err">”</span><span class="p">,</span> <span class="n">st</span><span class="p">.</span><span class="n">mem2</span><span class="p">);</span>
	<span class="n">printf</span><span class="p">(</span><span class="err">“</span><span class="o">%</span><span class="n">f</span><span class="err">\</span><span class="n">n</span><span class="err">”</span><span class="p">,</span> <span class="n">st</span><span class="p">.</span><span class="n">mem3</span><span class="p">);</span>

	<span class="n">un</span><span class="p">.</span><span class="n">mem1</span> <span class="o">=</span> <span class="mi">10</span><span class="p">;</span>
	<span class="n">un</span><span class="p">.</span><span class="n">mem2</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span>
	<span class="n">un</span><span class="p">.</span><span class="n">mem3</span> <span class="o">=</span> <span class="mi">14</span><span class="p">.</span><span class="mi">123</span><span class="p">;</span>

	<span class="n">printf</span><span class="p">(</span><span class="err">“</span><span class="o">%</span><span class="n">d</span><span class="err">\</span><span class="n">n</span><span class="err">”</span><span class="p">,</span> <span class="n">un</span><span class="p">.</span><span class="n">mem1</span><span class="p">);</span>
	<span class="n">printf</span><span class="p">(</span><span class="err">“</span><span class="o">%</span><span class="n">d</span><span class="err">\</span><span class="n">n</span><span class="err">”</span><span class="p">,</span> <span class="n">un</span><span class="p">.</span><span class="n">mem2</span><span class="p">);</span>
	<span class="n">printf</span><span class="p">(</span><span class="err">“</span><span class="o">%</span><span class="n">f</span><span class="err">\</span><span class="n">n</span><span class="err">”</span><span class="p">,</span> <span class="n">un</span><span class="p">.</span><span class="n">mem3</span><span class="p">);</span>

	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>실행결과</p>

<p>10</p>

<p>20</p>

<p>14.123000</p>

<p>-27</p>

<p>-618475291</p>

<p>14.123000</p>

<p>계속하려면 아무 키나 누르십시오 . . .</p>

<p>구조체의 각 멤버는 저장된 데이터가 그대로 잘 나왔습니다. 그런데 공용체에서는 mem1과 mem2에 저장한 데이터가 아닌 알 수 없는 값들이 출력이 되었습니다. 이는 공용체의 성질 때문인데, mem3에 14.123을 저장하면서 총 8byte의 메모리공간을 덮어썼는데 mem1과 mem2는 각각 상위 1byte와 상위 4byte만 참조하므로 이상한 값이 출력된겁니다.</p>

<p>공용체는 구조체보다 활용빈도가 크지는 않지만 하나의 메모리공간을 여러가지 접근방식으로 접근할 수 있기때문에 유용항 측면이 있습니다.</p>
:ET