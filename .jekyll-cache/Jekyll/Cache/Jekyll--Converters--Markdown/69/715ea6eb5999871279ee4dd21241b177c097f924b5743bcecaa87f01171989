I"<p>C언어로 프로그램이 어떻게 만들질까?</p>

<p> </p>
<h1 id="1-소스코드source-code생성">1. 소스코드(source code) 생성</h1>
<hr />

<p>간단한 4칙연산 계산기를 C언어로 만들어보려 합니다. 우리가 두 개의 숫자를 넣고, ＋연산, －연산, ×연산, ÷연산 중 하나를 선택하여 계산결과를 모니터로 출력 해주는 기능이 필요합니다. 이 기능을 가능하게 해주는 C 코드를 우리가 작성합니다. 이 과정을 소스코드 작성, 생성이라고 합니다.</p>

<p> 
 </p>
<h1 id="2-컴파일compile">2. 컴파일(compile)</h1>
<hr />

<p>우리가 만든 소스코드는 기계(컴퓨터)가 바로 이해할 수 없는 언어입니다. 하지만, 컴파일러를 통하여 기계어로 번역을 해준다면 컴퓨터가 이해할 수 있는 2진코드(0과 1의 나열)가 생성됩니다. 바로 이러한 <strong>C언어 → 기계어</strong> 의 변환과정을 컴파일이라고 합니다. 컴파일러는 프로그래밍 소스코드를 기계어로 번역해주는 소프트웨어입니다.</p>

<p> 
 
자, 그럼 위의 두 과정을 거치면 흔히 우리가 컴퓨터에서 보는 .exe 확장자로 된 실행파일이 만들어집니다. 여기서는 간단한 4칙연산 계산기를 예로 들었지만, 게임이나 그림판 같은 프로그램들도 기본적인 원리는 같습니다.</p>

<p>이 과정을 간단한 도표로 나타내 볼까요?</p>

<p><img src="/images/2018/09/1-5.jpg" alt="1-5" width="60%" height="60%" /></p>

<p>컴파일 에러가 발생하면 컴파일이 되지않고 컴파일러가 우리에게 그것을 알려줍니다. 따라서, 우리는 소스코드를 수정하여 다시 컴파일을 시도해야 합니다.</p>

<p>보통, 컴파일 과정 다음에 링크라는 과정도 있는데, 보통의 개발환경(IDE)에서는 이 두 과정을 합쳐줍니다. 그리고 컴파일, 링크 과정을 합쳐 빌드(build)라고 하는데, 그냥 링크 과정을 컴파일에 포함시켜 컴파일이라고 부르는게 일반적입니다.</p>

<p> 
 </p>
<h1 id="3-통합-개발환경ide">3. 통합 개발환경(IDE)</h1>
<hr />

<p>위에서 말씀드린 과정을 보통 통합개발환경(IDE) 에서 합니다.</p>

<p>IDE란 소스코드생성(코딩) 할 수 있는 편집기와 컴파일러를 제공하는 소프트웨어(SW) 입니다. 에러가 발생하였을 때 디버그(debug) 기능도 수행해 줍니다.</p>

<p>C언어를 위한 대표적인 IDE로는 Visual Studio, VS-Code, MinGW 등이 있습니다.</p>

<p><img src="/images/2018/09/2-1.png" alt="2-1" width="100%" height="100%" />
<img src="/images/2018/09/3.png" alt="3" width="100%" height="100%" /></p>

<p>첫번째 사진은 visual studio에서 코드를 작성한 것입니다. 나중에 알게 되시겠지만, 이 코드는 “Let’s start C language 라는 구문을 모니터 상으로 출력해줘” 라는 내용입니다.</p>

<p>빌드를 하고 실행을 시키면 window 콘솔창을 통해 모니터로 출력이 됩니다.</p>
:ET