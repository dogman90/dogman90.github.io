I"0<p>this는 인스턴스 자신을 가리키는 예약어이다. 즉, this는 인스턴스가 저장된 힙 메모리의 주소값을 가지고 있는 변수이며 스택 메모리에 저장된다.</p>

<p>위의 단 하나의 원리를 기억하면서 this가 사용되는 예제를 몇 개 보자.</p>

<p> </p>

<h1 id="1-인스턴스가-저장된-메모리의-주소">1. 인스턴스가 저장된 메모리의 주소</h1>

<hr />

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">classpart</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Student</span> <span class="o">{</span>
    <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>
    <span class="kt">char</span> <span class="n">gender</span><span class="o">;</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span> <span class="c1">// this.name은 클래스의 멤버변수이고 name은 메소드의 매개변수를 의미한다.</span>
    <span class="o">}</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="k">this</span><span class="o">.</span><span class="na">name</span><span class="o">;</span> <span class="c1">// 클래스의 멤버변수 name을 반환</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">printThis</span><span class="o">(){</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="k">this</span><span class="o">);</span> <span class="c1">// this자체를 반환</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>매개변수로 이름을 전달해 줄 때에도 그 의미를 파악할 수 있게 name이라고 넣어준다. 그리고 메소드의 코드 구현부에서는 로컬변수인 매개변수 name이 우선이다. 이 때 매개변수 name의 값을 클래스 멤버변수 name에 저장하기 위해 this를 쓴다. this.name은 클래스의 멤버변수 name을 지칭한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">classpart</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
       <span class="nc">Student</span> <span class="n">stu</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Student</span><span class="o">();</span>
       <span class="n">stu</span><span class="o">.</span><span class="na">setName</span><span class="o">(</span><span class="s">"John"</span><span class="o">);</span>
       <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">stu</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
       <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">stu</span><span class="o">);</span>
       <span class="n">stu</span><span class="o">.</span><span class="na">printThis</span><span class="o">();</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>실행결과</p>

<p>John</p>

<p>classpart.Student@15db9742</p>

<p>classpart.Student@15db9742</p>

<p>setName의 매개변수로 전달 된 “John”이 전달되었다. 이 때 setName 메소드의 코드 구현부의 this는 인스턴스가 대입되는 것이다. 따라서 코드 구현부는 stu.name = “John”이 되는 것이다.</p>

<p>한 번더 확인하기 위해 stu를 출력하고 this를 출력하는 printThis() 메소드를 호출한 결과가 같다. 둘 모두 인스턴스가 저장된 힙 메모리의 주소값을 가진다.</p>

<p> </p>

<h1 id="2-생성자에서-다른-생성자를-호출할-때">2. 생성자에서 다른 생성자를 호출할 때</h1>

<hr />

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">classpart</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Student</span> <span class="o">{</span>
    <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>
    <span class="kt">char</span> <span class="n">gender</span><span class="o">;</span>

    <span class="nc">Student</span><span class="o">(){</span>
       <span class="k">this</span><span class="o">(</span><span class="s">"NoName"</span><span class="o">,</span> <span class="sc">'?'</span><span class="o">);</span> <span class="c1">//아래에 정의된 생성자 호출</span>
    <span class="o">}</span>

    <span class="nc">Student</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">,</span> <span class="kt">char</span> <span class="n">gender</span><span class="o">){</span>
       <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
       <span class="k">this</span><span class="o">.</span><span class="na">gender</span> <span class="o">=</span> <span class="n">gender</span><span class="o">;</span>
    <span class="o">}</span>

   <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">name</span><span class="o">;</span>
   <span class="o">}</span>

   <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setName</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
   <span class="o">}</span>

   <span class="kd">public</span> <span class="kt">char</span> <span class="nf">getGender</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">gender</span><span class="o">;</span>
   <span class="o">}</span>

   <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setGender</span><span class="o">(</span><span class="kt">char</span> <span class="n">gender</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">gender</span> <span class="o">=</span> <span class="n">gender</span><span class="o">;</span>
   <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>위 코드는 인스턴스를 생성하면서 아무런 정보도 입력하지 않았을 때의 default값을 설정하기 위해 이미 정의 된 다른 생성자를 사용하는 경우이다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">classpart</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
       <span class="nc">Student</span> <span class="n">stu</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Student</span><span class="o">();</span>
       <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">stu</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
       <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">stu</span><span class="o">.</span><span class="na">getGender</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>실행결과</p>

<p>NoName</p>

<p>?</p>

<p> </p>

<h1 id="3-자신의-주소-반환">3. 자신의 주소 반환</h1>

<hr />

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">classpart</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Student</span> <span class="o">{</span>
    <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>
    <span class="kt">char</span> <span class="n">gender</span><span class="o">;</span>
    
    <span class="kd">public</span> <span class="nc">Student</span> <span class="nf">returnItSelf</span><span class="o">()</span> <span class="o">{</span>
       <span class="k">return</span> <span class="k">this</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>Student 타입의 자료를 반환하는 함수라 반환형이 Student인 메소드이다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">classpart</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
       <span class="nc">Student</span> <span class="n">stu</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Student</span><span class="o">();</span>
       <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">stu</span><span class="o">);</span>
       <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">stu</span><span class="o">.</span><span class="na">returnItSelf</span><span class="o">());</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>실행결과</p>

<p>classpart.Student@15db9742</p>

<p>classpart.Student@15db9742</p>

<p>같은 결과를 반환하는 것을 볼 수 있다.</p>

<p>이 경우처럼 this가 쓰이는 경우는 흔치 않다.</p>

<p> </p>

<p>하지만 세 가지 방법에 통용되는 원리는 단 하나다. <strong>this라는 것은 인스턴스가 만들어졌을 때 생겼을 주소값을 저장하여 자신을 가르키는 역할을 한다는 것만 기억하면 된다.</strong></p>
:ET